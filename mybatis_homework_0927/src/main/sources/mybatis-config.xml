<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

    <properties resource="db.properties"></properties>

    <!--
    mybatis自带了一级缓存,一级缓存的作用范围是同一个SqlSession,
    也就是说,在同一个SqlSession下,进行多次同样的查询,会有缓存.

    在statement标签中,有flushCache属性,表示是否清空缓冲区(false不清空,true清空),
    select的默认值是false,insert/update/delete的默认值是true.
    -->
    <settings>
        <!--
        这个开关表示是否开启二级缓存,默认值为true,
        二级缓存表示同一个mapper中的同一个查询是有缓存的,
        与是否是同一个SqlSession无关.
        注意事项:
            1. SqlSession关闭的时候(close)才会向二级缓存中缓存数据.
            2. 实体类需要序列化.
        在select中可以使用useCache属性单独控制该statement是否使用缓存.

        可以自定义二级缓存的框架 ehcache oscache
        -->
        <setting name="cacheEnabled" value="true"/>
        <!--
        懒加载开关默认值为false,如果为false,在查询的时候,会把所有关联的sql都会进行查询.
        如果设置为true,关联的sql会根据需要的时候才会进行查询.
        -->
        <setting name="lazyLoadingEnabled" value="false"/>
        <!--
        积极的懒加载,默认值是false,调用某个对象的任意方法,都会把它关联的其他sql进行调用,
        例如,获取goods的名字属性,也会查询该商品的类别.
        -->
        <setting name="aggressiveLazyLoading" value="true"/>
        <!--默认是false,下划线形式的列名与小驼峰形式的属性名自动映射.-->
        <setting name="mapUnderscoreToCamelCase" value="true"/>
        <!--
        自动映射适用于单表查询,一对一的多表查询,
        但是一对多查询很容易出现与预计的结果不一致的情况.
        -->
        <!--<setting name="autoMappingBehavior" value="FULL"/>-->
        <setting name="logImpl" value="LOG4J"/>
    </settings>

    <typeAliases>
        <!--扫描entity包,自动为实体类创建别名,默认的别名是小驼峰形式-->
        <!--<package name="com.jianjieming.study.entity"/>-->
        <typeAlias type="com.jianjieming.study.entity.TbGoodsCategory" alias="Category"/>
        <typeAlias type="com.jianjieming.study.entity.TbGoods" alias="Goods"/>
        <typeAlias type="com.jianjieming.study.entity.TbUser" alias="User"/>
        <typeAlias type="com.jianjieming.study.entity.TbOrder" alias="Order"/>
        <typeAlias type="com.jianjieming.study.entity.TbOrderItem" alias="OrderItem"/>
        <typeAlias type="com.jianjieming.study.entity.OrderMoney" alias="OrderMoney"/>
        <typeAlias type="com.jianjieming.study.entity.UserMoney" alias="UserMoney"/>
    </typeAliases>

    <environments default="development">
        <environment id="development">
            <transactionManager type="JDBC"></transactionManager>
            <dataSource type="POOLED">
                <property name="driver" value="${driver}"/>
                <property name="url" value="${url}"/>
                <property name="username" value="${username}"/>
                <property name="password" value="${password}"/>
            </dataSource>
        </environment>
    </environments>

    <mappers>
        <mapper resource="com/jianjieming/study/mapper/CommonsMapper.xml"/>
        <package name="com.jianjieming.study.mapper"/>
    </mappers>

</configuration>